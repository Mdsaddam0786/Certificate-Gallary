{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmdh7\\\\Downloads\\\\certificate-gallery (1)\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [certificates, setCertificates] = useState([]);\n  const handleUpload = e => {\n    const files = Array.from(e.target.files);\n    const newCertificates = files.map(file => ({\n      id: Date.now() + Math.random(),\n      name: file.name,\n      url: URL.createObjectURL(file)\n    }));\n    setCertificates(prev => [...prev, ...newCertificates]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4 text-center\",\n      children: \"My Certificate Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      multiple: true,\n      onChange: handleUpload,\n      className: \"mb-6 block mx-auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\",\n      children: certificates.map(cert => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-3 rounded-xl shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: cert.url,\n          alt: cert.name,\n          className: \"w-full h-64 object-cover rounded-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-center\",\n          children: cert.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, cert.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"en/gw4OD98zjAmbitD7iybl7m4s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","certificates","setCertificates","handleUpload","e","files","Array","from","target","newCertificates","map","file","id","Date","now","Math","random","name","url","URL","createObjectURL","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","multiple","onChange","cert","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/mmdh7/Downloads/certificate-gallery (1)/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n  const [certificates, setCertificates] = useState([]);\n\n  const handleUpload = (e) => {\n    const files = Array.from(e.target.files);\n    const newCertificates = files.map(file => ({\n      id: Date.now() + Math.random(),\n      name: file.name,\n      url: URL.createObjectURL(file),\n    }));\n    setCertificates(prev => [...prev, ...newCertificates]);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6\">\n      <h1 className=\"text-3xl font-bold mb-4 text-center\">My Certificate Gallery</h1>\n\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        multiple\n        onChange={handleUpload}\n        className=\"mb-6 block mx-auto\"\n      />\n\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n        {certificates.map(cert => (\n          <div key={cert.id} className=\"bg-white p-3 rounded-xl shadow-md\">\n            <img\n              src={cert.url}\n              alt={cert.name}\n              className=\"w-full h-64 object-cover rounded-lg\"\n            />\n            <p className=\"mt-2 text-sm text-center\">{cert.name}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACI,MAAM,CAACH,KAAK,CAAC;IACxC,MAAMI,eAAe,GAAGJ,KAAK,CAACK,GAAG,CAACC,IAAI,KAAK;MACzCC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;MAC9BC,IAAI,EAAEN,IAAI,CAACM,IAAI;MACfC,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACT,IAAI;IAC/B,CAAC,CAAC,CAAC;IACHT,eAAe,CAACmB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE,GAAGZ,eAAe,CAAC,CAAC;EACxD,CAAC;EAED,oBACEX,OAAA;IAAKwB,SAAS,EAAC,8BAA8B;IAAAC,QAAA,gBAC3CzB,OAAA;MAAIwB,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE/E7B,OAAA;MACE8B,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,SAAS;MAChBC,QAAQ;MACRC,QAAQ,EAAE5B,YAAa;MACvBmB,SAAS,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eAEF7B,OAAA;MAAKwB,SAAS,EAAC,sDAAsD;MAAAC,QAAA,EAClEtB,YAAY,CAACS,GAAG,CAACsB,IAAI,iBACpBlC,OAAA;QAAmBwB,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAC9DzB,OAAA;UACEmC,GAAG,EAAED,IAAI,CAACd,GAAI;UACdgB,GAAG,EAAEF,IAAI,CAACf,IAAK;UACfK,SAAS,EAAC;QAAqC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACF7B,OAAA;UAAGwB,SAAS,EAAC,0BAA0B;UAAAC,QAAA,EAAES,IAAI,CAACf;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAN/CK,IAAI,CAACpB,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAvCID,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAyCT,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}